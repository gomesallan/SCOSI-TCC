generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ordem {
  id                Int          @id @default(autoincrement())
  data_cadastro     DateTime     @db.DateTime(0)
  data_alteracao    DateTime    @db.DateTime(0)
  lote              Int
  qtd               Int
  status            ordem_status
  produto_id        Int
  parceiro_id       Int
  parceiro          parceiro     @relation(fields: [parceiro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ordem_parceiro1")
  produto           produto      @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ordem_produto1")

  @@index([produto_id], map: "fk_ordem_produto1_idx")
  @@index([parceiro_id], map: "fk_ordem_parceiro1_idx")
}

model produto {
  id            Int      @id @default(autoincrement())
  nome          String   @db.VarChar(100)
  cod           Int      @unique
  ativo         Int      @default(1)
  data_cadastro DateTime @db.DateTime(0)
  etiqueta_id   Int
  ordem         ordem[]
  etiqueta      etiqueta @relation(fields: [etiqueta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_produto_etiqueta1")

  @@index([etiqueta_id], map: "fk_produto_etiqueta1_idx")
}

model etiqueta {
  id            Int       @id @default(autoincrement())
  data_cadastro DateTime  @db.DateTime(0)
  referencia    String    @db.VarChar(100)
  url           String    @db.Text
  ativo         Int       @default(1)
  produto       produto[]
}

model administrador {
  id            Int        @id @default(autoincrement())
  data_cadastro DateTime   @db.DateTime(0)
  nome          String     @db.VarChar(100) 
  ativo         Int        @default(1)
  usuario_id    Int     
  parceiro      parceiro[]
  usuario       usuario    @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_administrador_usuario1")

  @@index([usuario_id], map: "fk_administrador_usuario1_idx")
}

model parceiro {
  id               Int           @id @default(autoincrement())
  data_cadastro    DateTime      @db.DateTime(0)
  nome             String        @db.VarChar(100)
  ativo            Int           @default(1)
  administrador_id Int
  usuario_id Int
  ordem            ordem[]
  administrador    administrador @relation(fields: [administrador_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parceiro_administrador1")
  usuario          usuario       @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parceiro_usuario1")

  @@index([usuario_id], map: "fk_parceiro_usuario1_idx")
  @@index([administrador_id], map: "fk_parceiro_administrador1_idx")
}

model usuario {
  id               Int           @id @default(autoincrement())
  data_cadastro    DateTime      @db.DateTime(0)
  login            String        @db.VarChar(100) @unique
  senha            String        @db.Text
  tipo             usuario_tipo
  parceiro         parceiro[]
  administrador    administrador[]
  token            token[]

}
model token {
  id               Int           @id @default(autoincrement())
  data_cadastro    DateTime      @db.DateTime(0)
  data_alteracao   DateTime      @db.DateTime(0)
  token            String        @db.VarChar(500) @unique
  ativo            Int           @default(1)
  usuario_id       Int
  usuario          usuario       @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_token_usuario1")

  @@index([usuario_id], map: "fk_token_usuario1_idx")
}

enum usuario_tipo {
  Administrador
  Parceiro
}

enum ordem_status {
  Nova
  Defeito
  Urgencia
  Andamento
  Enviado
  Concluido
}
